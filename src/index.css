*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

/*
! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden]:where(:not([hidden="until-found"])) {
  display: none;
}

.pointer-events-none {
  pointer-events: none;
}

.pointer-events-auto {
  pointer-events: auto;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.inset-0 {
  inset: 0px;
}

.left-3 {
  left: 0.75rem;
}

.right-3 {
  right: 0.75rem;
}

.top-1\/2 {
  top: 50%;
}

.ml-0 {
  margin-left: 0px;
}

.ml-2 {
  margin-left: 0.5rem;
}

.mr-0 {
  margin-right: 0px;
}

.mr-2 {
  margin-right: 0.5rem;
}

.mt-1 {
  margin-top: 0.25rem;
}

.mt-4 {
  margin-top: 1rem;
}

.inline-block {
  display: inline-block;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.aspect-square {
  aspect-ratio: 1 / 1;
}

.h-10 {
  height: 2.5rem;
}

.h-11 {
  height: 2.75rem;
}

.h-4 {
  height: 1rem;
}

.h-9 {
  height: 2.25rem;
}

.w-4 {
  width: 1rem;
}

.w-\[300px\] {
  width: 300px;
}

.w-full {
  width: 100%;
}

.shrink-0 {
  flex-shrink: 0;
}

.-translate-y-1\/2 {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.scale-0 {
  --tw-scale-x: 0;
  --tw-scale-y: 0;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@keyframes ripple {
  0% {
    transform: scale(0);
    opacity: 0.1;
  }

  100% {
    transform: scale(1);
    opacity: 0.2;
  }
}

.animate-ripple {
  animation: ripple 300ms linear;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.animate-spin {
  animation: spin 1s linear infinite;
}

.cursor-wait {
  cursor: wait;
}

.cursor-pointer {
  cursor: pointer;
}

.flex-row {
  flex-direction: row;
}

.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.gap-1 {
  gap: 0.25rem;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-4 {
  gap: 1rem;
}

.gap-6 {
  gap: 1.5rem;
}

.gap-8 {
  gap: 2rem;
}

.divide-x > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-x-reverse: 0;
  border-right-width: calc(1px * var(--tw-divide-x-reverse));
  border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
}

.divide-y > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}

.overflow-hidden {
  overflow: hidden;
}

.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.whitespace-nowrap {
  white-space: nowrap;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-lg {
  border-radius: 0.75rem;
}

.rounded-md {
  border-radius: 0.5rem;
}

.rounded-none {
  border-radius: 0;
}

.rounded-sm {
  border-radius: 0.35rem;
}

.border {
  border-width: 1px;
}

.border-2 {
  border-width: 2px;
}

.border-b-2 {
  border-bottom-width: 2px;
}

.border-destructive {
  border-color: rgba(var(--color-destructive-rgb));
}

.border-destructive\/50 {
  border-color: rgba(var(--color-destructive-rgb), 0.5);
}

.border-input\/50 {
  border-color: rgba(var(--color-input-rgb), 0.5);
}

.border-primary\/50 {
  border-color: rgba(var(--color-primary-rgb), 0.5);
}

.border-secondary\/50 {
  border-color: rgba(var(--color-secondary-rgb), 0.5);
}

.border-transparent {
  border-color: transparent;
}

.border-warning\/50 {
  border-color: rgba(var(--color-warning-rgb), 0.5);
}

.border-current {
  border-color: currentColor;
}

.border-b-destructive {
  border-bottom-color: rgba(var(--color-destructive-rgb));
}

.border-b-destructive\/30 {
  border-bottom-color: rgba(var(--color-destructive-rgb), 0.3);
}

.border-b-input\/30 {
  border-bottom-color: rgba(var(--color-input-rgb), 0.3);
}

.border-b-primary\/30 {
  border-bottom-color: rgba(var(--color-primary-rgb), 0.3);
}

.border-b-secondary\/30 {
  border-bottom-color: rgba(var(--color-secondary-rgb), 0.3);
}

.border-b-warning\/30 {
  border-bottom-color: rgba(var(--color-warning-rgb), 0.3);
}

.border-t-transparent {
  border-top-color: transparent;
}

.bg-background {
  background-color: rgba(var(--color-background-rgb));
}

.bg-current {
  background-color: currentColor;
}

.bg-destructive {
  background-color: rgba(var(--color-destructive-rgb));
}

.bg-destructive\/10 {
  background-color: rgba(var(--color-destructive-rgb), 0.1);
}

.bg-destructive\/20 {
  background-color: rgba(var(--color-destructive-rgb), 0.2);
}

.bg-input\/10 {
  background-color: rgba(var(--color-input-rgb), 0.1);
}

.bg-primary {
  background-color: rgba(var(--color-primary-rgb));
}

.bg-primary\/10 {
  background-color: rgba(var(--color-primary-rgb), 0.1);
}

.bg-primary\/20 {
  background-color: rgba(var(--color-primary-rgb), 0.2);
}

.bg-secondary {
  background-color: rgba(var(--color-secondary-rgb));
}

.bg-secondary\/10 {
  background-color: rgba(var(--color-secondary-rgb), 0.1);
}

.bg-secondary\/20 {
  background-color: rgba(var(--color-secondary-rgb), 0.2);
}

.bg-transparent {
  background-color: transparent;
}

.bg-warning {
  background-color: rgba(var(--color-warning-rgb));
}

.bg-warning\/10 {
  background-color: rgba(var(--color-warning-rgb), 0.1);
}

.bg-warning\/20 {
  background-color: rgba(var(--color-warning-rgb), 0.2);
}

.px-0 {
  padding-left: 0px;
  padding-right: 0px;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}

.px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.pl-10 {
  padding-left: 2.5rem;
}

.pr-10 {
  padding-right: 2.5rem;
}

.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.font-bold {
  font-weight: 700;
}

.font-medium {
  font-weight: 500;
}

.font-semibold {
  font-weight: 600;
}

.text-current {
  color: currentColor;
}

.text-destructive {
  color: rgba(var(--color-destructive-rgb));
}

.text-destructive-foreground {
  color: rgba(var(--color-destructive-foreground-rgb));
}

.text-input {
  color: rgba(var(--color-input-rgb));
}

.text-primary {
  color: rgba(var(--color-primary-rgb));
}

.text-primary-foreground {
  color: rgba(var(--color-primary-foreground-rgb));
}

.text-secondary {
  color: rgba(var(--color-secondary-rgb));
}

.text-secondary-foreground {
  color: rgba(var(--color-secondary-foreground-rgb));
}

.text-warning {
  color: rgba(var(--color-warning-rgb));
}

.text-warning-foreground {
  color: rgba(var(--color-warning-foreground-rgb));
}

.underline {
  text-decoration-line: underline;
}

.underline-offset-4 {
  text-underline-offset: 4px;
}

.opacity-25 {
  opacity: 0.25;
}

.opacity-30 {
  opacity: 0.3;
}

.opacity-75 {
  opacity: 0.75;
}

.opacity-60 {
  opacity: 0.6;
}

.outline {
  outline-style: solid;
}

.ring-1 {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.ring-primary {
  --tw-ring-color: rgba(var(--color-primary-rgb));
}

.ring-offset-1 {
  --tw-ring-offset-width: 1px;
}

.ring-offset-background {
  --tw-ring-offset-color: rgba(var(--color-background-rgb));
}

.file\:border-0::file-selector-button {
  border-width: 0px;
}

.file\:bg-transparent::file-selector-button {
  background-color: transparent;
}

.file\:text-sm::file-selector-button {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.file\:font-medium::file-selector-button {
  font-weight: 500;
}

.placeholder\:text-destructive\/75::-moz-placeholder {
  color: rgba(var(--color-destructive-rgb), 0.75);
}

.placeholder\:text-destructive\/75::placeholder {
  color: rgba(var(--color-destructive-rgb), 0.75);
}

.placeholder\:text-input\/75::-moz-placeholder {
  color: rgba(var(--color-input-rgb), 0.75);
}

.placeholder\:text-input\/75::placeholder {
  color: rgba(var(--color-input-rgb), 0.75);
}

.placeholder\:text-primary\/75::-moz-placeholder {
  color: rgba(var(--color-primary-rgb), 0.75);
}

.placeholder\:text-primary\/75::placeholder {
  color: rgba(var(--color-primary-rgb), 0.75);
}

.placeholder\:text-secondary\/75::-moz-placeholder {
  color: rgba(var(--color-secondary-rgb), 0.75);
}

.placeholder\:text-secondary\/75::placeholder {
  color: rgba(var(--color-secondary-rgb), 0.75);
}

.placeholder\:text-warning\/75::-moz-placeholder {
  color: rgba(var(--color-warning-rgb), 0.75);
}

.placeholder\:text-warning\/75::placeholder {
  color: rgba(var(--color-warning-rgb), 0.75);
}

.hover\:bg-destructive\/10:hover {
  background-color: rgba(var(--color-destructive-rgb), 0.1);
}

.hover\:bg-destructive\/20:hover {
  background-color: rgba(var(--color-destructive-rgb), 0.2);
}

.hover\:bg-destructive\/30:hover {
  background-color: rgba(var(--color-destructive-rgb), 0.3);
}

.hover\:bg-destructive\/80:hover {
  background-color: rgba(var(--color-destructive-rgb), 0.8);
}

.hover\:bg-input\/10:hover {
  background-color: rgba(var(--color-input-rgb), 0.1);
}

.hover\:bg-primary\/10:hover {
  background-color: rgba(var(--color-primary-rgb), 0.1);
}

.hover\:bg-primary\/20:hover {
  background-color: rgba(var(--color-primary-rgb), 0.2);
}

.hover\:bg-primary\/30:hover {
  background-color: rgba(var(--color-primary-rgb), 0.3);
}

.hover\:bg-primary\/80:hover {
  background-color: rgba(var(--color-primary-rgb), 0.8);
}

.hover\:bg-secondary\/10:hover {
  background-color: rgba(var(--color-secondary-rgb), 0.1);
}

.hover\:bg-secondary\/20:hover {
  background-color: rgba(var(--color-secondary-rgb), 0.2);
}

.hover\:bg-secondary\/30:hover {
  background-color: rgba(var(--color-secondary-rgb), 0.3);
}

.hover\:bg-secondary\/80:hover {
  background-color: rgba(var(--color-secondary-rgb), 0.8);
}

.hover\:bg-warning\/10:hover {
  background-color: rgba(var(--color-warning-rgb), 0.1);
}

.hover\:bg-warning\/20:hover {
  background-color: rgba(var(--color-warning-rgb), 0.2);
}

.hover\:bg-warning\/30:hover {
  background-color: rgba(var(--color-warning-rgb), 0.3);
}

.hover\:bg-warning\/80:hover {
  background-color: rgba(var(--color-warning-rgb), 0.8);
}

.hover\:text-warning-foreground:hover {
  color: rgba(var(--color-warning-foreground-rgb));
}

.hover\:underline:hover {
  text-decoration-line: underline;
}

.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.focus\:ring-2:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-primary:focus {
  --tw-ring-color: rgba(var(--color-primary-rgb));
}

.focus\:ring-offset-2:focus {
  --tw-ring-offset-width: 2px;
}

.focus-visible\:border-destructive:focus-visible {
  border-color: rgba(var(--color-destructive-rgb));
}

.focus-visible\:border-input:focus-visible {
  border-color: rgba(var(--color-input-rgb));
}

.focus-visible\:border-primary:focus-visible {
  border-color: rgba(var(--color-primary-rgb));
}

.focus-visible\:border-secondary:focus-visible {
  border-color: rgba(var(--color-secondary-rgb));
}

.focus-visible\:border-warning:focus-visible {
  border-color: rgba(var(--color-warning-rgb));
}

.focus-visible\:border-b-destructive:focus-visible {
  border-bottom-color: rgba(var(--color-destructive-rgb));
}

.focus-visible\:border-b-destructive\/70:focus-visible {
  border-bottom-color: rgba(var(--color-destructive-rgb), 0.7);
}

.focus-visible\:border-b-input\/70:focus-visible {
  border-bottom-color: rgba(var(--color-input-rgb), 0.7);
}

.focus-visible\:border-b-primary\/70:focus-visible {
  border-bottom-color: rgba(var(--color-primary-rgb), 0.7);
}

.focus-visible\:border-b-secondary\/70:focus-visible {
  border-bottom-color: rgba(var(--color-secondary-rgb), 0.7);
}

.focus-visible\:border-b-warning\/70:focus-visible {
  border-bottom-color: rgba(var(--color-warning-rgb), 0.7);
}

.focus-visible\:bg-destructive\/20:focus-visible {
  background-color: rgba(var(--color-destructive-rgb), 0.2);
}

.focus-visible\:bg-destructive\/30:focus-visible {
  background-color: rgba(var(--color-destructive-rgb), 0.3);
}

.focus-visible\:bg-input\/20:focus-visible {
  background-color: rgba(var(--color-input-rgb), 0.2);
}

.focus-visible\:bg-primary\/20:focus-visible {
  background-color: rgba(var(--color-primary-rgb), 0.2);
}

.focus-visible\:bg-primary\/30:focus-visible {
  background-color: rgba(var(--color-primary-rgb), 0.3);
}

.focus-visible\:bg-secondary\/20:focus-visible {
  background-color: rgba(var(--color-secondary-rgb), 0.2);
}

.focus-visible\:bg-secondary\/30:focus-visible {
  background-color: rgba(var(--color-secondary-rgb), 0.3);
}

.focus-visible\:bg-warning\/20:focus-visible {
  background-color: rgba(var(--color-warning-rgb), 0.2);
}

.focus-visible\:bg-warning\/30:focus-visible {
  background-color: rgba(var(--color-warning-rgb), 0.3);
}

.focus-visible\:text-warning-foreground:focus-visible {
  color: rgba(var(--color-warning-foreground-rgb));
}

.focus-visible\:underline:focus-visible {
  text-decoration-line: underline;
}

.focus-visible\:outline-none:focus-visible {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.focus-visible\:ring-0:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus-visible\:ring-1:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus-visible\:ring-2:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus-visible\:ring-destructive:focus-visible {
  --tw-ring-color: rgba(var(--color-destructive-rgb));
}

.focus-visible\:ring-primary:focus-visible {
  --tw-ring-color: rgba(var(--color-primary-rgb));
}

.focus-visible\:ring-ring:focus-visible {
  --tw-ring-color: currentColor;
}

.focus-visible\:ring-secondary:focus-visible {
  --tw-ring-color: rgba(var(--color-secondary-rgb));
}

.focus-visible\:ring-warning:focus-visible {
  --tw-ring-color: rgba(var(--color-warning-rgb));
}

.focus-visible\:ring-offset-0:focus-visible {
  --tw-ring-offset-width: 0px;
}

.focus-visible\:ring-offset-1:focus-visible {
  --tw-ring-offset-width: 1px;
}

.focus-visible\:ring-offset-2:focus-visible {
  --tw-ring-offset-width: 2px;
}

.active\:translate-y-px:active {
  --tw-translate-y: 1px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.active\:transform-none:active {
  transform: none;
}

.active\:shadow-inner:active {
  --tw-shadow: inset 0 2px 4px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: inset 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.active\:shadow-none:active {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.disabled\:pointer-events-none:disabled {
  pointer-events: none;
}

.disabled\:cursor-not-allowed:disabled {
  cursor: not-allowed;
}

.disabled\:opacity-50:disabled {
  opacity: 0.5;
}